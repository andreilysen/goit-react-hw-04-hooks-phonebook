{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ContactListItem.js","Components/ContactsList/ContactsList.js","Components/App/App.js","index.js","Components/Form/Form.module.css","Components/ContactsList/Contact.module.css"],"names":["Form","onAddContacts","useState","name","setName","number","setNumber","handleChangeInput","event","target","value","className","styles","form","onSubmit","e","preventDefault","id","uuidv4","item","input","type","pattern","title","required","onChange","button","Filter","changeFilter","ContactListItem","onClickRemove","items","onClick","ContactsList","contacts","onRemoveContact","length","map","App","setContacts","filter","setFilter","useEffect","storage","JSON","parse","localStorage","getItem","setItem","stringify","filterContact","contact","toLowerCase","includes","newContact","inContact","find","alert","prevState","console","log","dataId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.796db7c0.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport styles from \"./Form.module.css\";\n\nconst Form = ({ onAddContacts }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const handleChangeInput = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleAddContact = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    const contact = { name, number, id };\n    onAddContacts(contact);\n    resetInput();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleAddContact}>\n      <label className={styles.item}>\n        <p>name</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeInput}\n        />\n        <p>Number</p>\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeInput}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onAddContacts: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Form/Form.module.css\";\n\nconst Filter = ({ value, changeFilter }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={changeFilter}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Contact.module.css\";\n\nconst ContactListItem = ({ name, number, onClickRemove }) => (\n  <li className={styles.items}>\n    <p className={styles.item}>{name}:</p>\n    <p className={styles.item}>{number}</p>\n    <button onClick={onClickRemove}>Delete</button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\n\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({ contacts, onRemoveContact }) => {\n  return (\n    contacts.length > 0 && (\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onClickRemove={() => onRemoveContact(id)}\n          />\n        ))}\n      </ul>\n    )\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactsList;\n","import { useState, useEffect } from \"react\";\n\nimport Form from \"../Form\";\nimport Filter from \"../Filter\";\nimport ContactsList from \"../ContactsList\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const storage = JSON.parse(localStorage.getItem(\"data\"));\n    setContacts(storage);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"data\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const AddContact = (newContact) => {\n    const inContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (inContact) {\n      alert(`${inContact.name}  is already in contacts!`);\n      return;\n    }\n    setContacts((prevState) => [newContact, ...prevState]);\n  };\n\n  const ChangeFilter = (e) => {\n    console.log(e);\n\n    setFilter(e.target.value);\n  };\n\n  const removeContact = (dataId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== dataId)\n    );\n  };\n\n  const filterContact = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form onAddContacts={AddContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} changeFilter={ChangeFilter} />\n      <ContactsList contacts={filterContact} onRemoveContact={removeContact} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3fN8M\",\"item\":\"Form_item__3owNi\",\"button\":\"Form_button__2a9fG\",\"input\":\"Form_input__183G0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Contact_items__37O6W\",\"item\":\"Contact_item__2rB1D\"};"],"sourceRoot":""}